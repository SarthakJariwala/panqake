#!/bin/bash
# Delete a branch and relink the stack

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"
source "$SCRIPT_DIR/../lib/common.sh"

usage() {
  echo "Usage: panqake-delete <branch-name>"
  echo "  Deletes a branch and relinks its children to its parent"
  echo "  <branch-name>: Name of the branch to delete"
  exit 1
}

if [ $# -lt 1 ]; then
  usage
fi

TARGET_BRANCH="$1"
CURRENT_BRANCH=$(get_current_branch)

# Check if target branch exists
if ! branch_exists "$TARGET_BRANCH"; then
  echo "Error: Branch '$TARGET_BRANCH' does not exist"
  exit 1
fi

# Check if target branch is the current branch
if [ "$TARGET_BRANCH" = "$CURRENT_BRANCH" ]; then
  echo "Error: Cannot delete the current branch. Please checkout another branch first."
  exit 1
fi

# Get parent and children of the target branch
PARENT_BRANCH=$(get_parent_branch "$TARGET_BRANCH")
CHILD_BRANCHES=$(get_child_branches "$TARGET_BRANCH")

# Ensure parent branch exists
if [ -n "$PARENT_BRANCH" ] && ! branch_exists "$PARENT_BRANCH"; then
  echo "Error: Parent branch '$PARENT_BRANCH' does not exist"
  exit 1
fi

echo "Deleting branch '$TARGET_BRANCH' from the stack..."

# Process each child branch
if [ -n "$CHILD_BRANCHES" ]; then
  echo "Relinking child branches to parent '$PARENT_BRANCH'..."

  while IFS= read -r child; do
    echo "Processing child branch: $child"

    # Checkout the child branch
    git checkout "$child"
    if [ $? -ne 0 ]; then
      echo "Error: Failed to checkout branch '$child'"
      git checkout "$CURRENT_BRANCH"
      exit 1
    fi

    # Rebase onto the grandparent branch
    if [ -n "$PARENT_BRANCH" ]; then
      git rebase "$PARENT_BRANCH"
      if [ $? -ne 0 ]; then
        echo "Error: Rebase conflict detected in branch '$child'"
        echo "Please resolve conflicts and run 'git rebase --continue'"
        echo "Then run 'panqake-delete $TARGET_BRANCH' again to retry"
        exit 1
      fi

      # Update stack metadata
      add_to_stack "$child" "$PARENT_BRANCH"
    fi

  done <<< "$CHILD_BRANCHES"
fi

# Return to original branch if it's not the one being deleted
if [ "$TARGET_BRANCH" != "$CURRENT_BRANCH" ]; then
  git checkout "$CURRENT_BRANCH"
fi

# Delete the branch
git branch -D "$TARGET_BRANCH"
if [ $? -ne 0 ]; then
  echo "Error: Failed to delete branch '$TARGET_BRANCH'"
  exit 1
fi

# Remove from stack metadata
remove_from_stack "$TARGET_BRANCH"

echo "Success! Deleted branch '$TARGET_BRANCH' and relinked the stack"
