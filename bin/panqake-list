#!/bin/bash
# List the current branch stack

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"
source "$SCRIPT_DIR/../lib/common.sh"

usage() {
  echo "Usage: panqake-list [branch-name]"
  echo "  Lists the branch stack"
  echo "  [branch-name]: Optional branch to start from (defaults to current branch)"
  exit 1
}

# If no branch specified, use current branch
TARGET_BRANCH="${1:-$(get_current_branch)}"

# Function to recursively print the branch tree
print_branch_tree() {
  local branch="$1"
  local prefix="$2"
  local is_current=$([ "$branch" == "$(get_current_branch)" ] && echo "*" || echo " ")

  echo "${prefix}${is_current} ${branch}"

  # Get children of this branch
  local children=$(get_child_branches "$branch")

  if [ -n "$children" ]; then
    local last_child=$(echo "$children" | tail -n1)

    while IFS= read -r child; do
      if [ "$child" = "$last_child" ]; then
        print_branch_tree "$child" "${prefix}  └── "
      else
        print_branch_tree "$child" "${prefix}  ├── "
      fi
    done <<< "$children"
  fi
}

# Function to find the root of the stack for a given branch
find_stack_root() {
  local branch="$1"
  local parent=$(get_parent_branch "$branch")

  if [ -z "$parent" ]; then
    echo "$branch"
  else
    find_stack_root "$parent"
  fi
}

# Check if target branch exists
if ! branch_exists "$TARGET_BRANCH"; then
  echo "Error: Branch '$TARGET_BRANCH' does not exist"
  exit 1
fi

# Find the root of the stack for the target branch
ROOT_BRANCH=$(find_stack_root "$TARGET_BRANCH")

echo "Branch stack (current: $(get_current_branch)):"
print_branch_tree "$ROOT_BRANCH" ""
