#!/bin/bash
# Create pull requests for branches in the stack

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"
source "$SCRIPT_DIR/../lib/common.sh"

usage() {
  echo "Usage: panqake-pr [branch-name]"
  echo "  Creates pull requests for a branch and its parent stack"
  echo "  [branch-name]: Optional branch to start from (defaults to current branch)"
  exit 1
}

# Check for GitHub CLI
if ! command_exists gh; then
  echo "Error: GitHub CLI (gh) is required but not installed."
  echo "Please install GitHub CLI: https://cli.github.com/manual/installation"
  exit 1
fi

# If no branch specified, use current branch
TARGET_BRANCH="${1:-$(get_current_branch)}"

# Check if target branch exists
if ! branch_exists "$TARGET_BRANCH"; then
  echo "Error: Branch '$TARGET_BRANCH' does not exist"
  exit 1
fi

# Function to find the bottom-most branch without a PR
find_oldest_branch_without_pr() {
  local branch="$1"
  local parent=$(get_parent_branch "$branch")

  # If no parent or parent is main/master, we've reached the bottom
  if [ -z "$parent" ] || [ "$parent" = "main" ] || [ "$parent" = "master" ]; then
    echo "$branch"
    return
  fi

  # Check if parent branch already has a PR
  if gh pr view "$parent" &>/dev/null; then
    # Parent already has a PR, so this is the bottom-most branch without one
    echo "$branch"
  else
    # Parent doesn't have a PR, check further down the stack
    find_oldest_branch_without_pr "$parent"
  fi
}

# Find the oldest branch in the stack that needs a PR
OLDEST_BRANCH=$(find_oldest_branch_without_pr "$TARGET_BRANCH")

# Function to create PRs from bottom up
create_prs_bottom_up() {
  local branch="$1"

  # Check if this branch already has a PR
  if gh pr view "$branch" &>/dev/null; then
    echo "Branch '$branch' already has an open PR"
  else
    echo "Creating PR for branch '$branch'..."

    # Get parent branch for PR target
    local parent=$(get_parent_branch "$branch")
    if [ -z "$parent" ]; then
      parent="main" # Default to main if no parent
    fi

    # Create the PR
    gh pr create --base "$parent" --head "$branch" --title "[$branch] Stacked PR" --body "This is part of a stacked PR series."

    if [ $? -ne 0 ]; then
      echo "Error: Failed to create PR for branch '$branch'"
      exit 1
    fi
  fi

  # Process any children of this branch that lead to the target
  local is_in_path_to_target=false

  for child in $(get_child_branches "$branch"); do
    # Check if this child is in the path to the target
    local current="$TARGET_BRANCH"
    while [ -n "$current" ] && [ "$current" != "$branch" ]; do
      if [ "$current" = "$child" ]; then
        is_in_path_to_target=true
        break
      fi
      current=$(get_parent_branch "$current")
    done

    if [ "$is_in_path_to_target" = true ] || [ "$child" = "$TARGET_BRANCH" ]; then
      create_prs_bottom_up "$child"
    fi
  done
}

echo "Creating PRs from the bottom of the stack up to '$TARGET_BRANCH'..."
create_prs_bottom_up "$OLDEST_BRANCH"

echo "Pull request creation complete"
